{
  "consumer": {
    "name": "Consumer"
  },
  "provider": {
    "name": "Provider"
  },
  "interactions": [
    {
      "description": "A invalid GET request for Date Validation with invalid date parameter",
      "providerState": "There is data",
      "request": {
        "method": "get",
        "path": "/api/provider",
        "query": "validDateTime=lolz"
      },
      "response": {
        "status": 400,
        "headers": {
          "Content-Type": "application/json; charset=utf-8"
        },
        "body": {
          "message": "validDateTime is not a date or time"
        }
      }
    },
    {
      "description": "A valid GET request for Date Validation",
      "providerState": "There is no data",
      "request": {
        "method": "get",
        "path": "/api/provider",
        "query": "validDateTime=04/04/2018"
      },
      "response": {
        "status": 404,
        "headers": {
        }
      }
    },
    {
      "description": "A valid GET request for Date Validation",
      "providerState": "There is data",
      "request": {
        "method": "get",
        "path": "/api/provider",
        "query": "validDateTime=04/05/2018"
      },
      "response": {
        "status": 200,
        "headers": {
          "Content-Type": "application/json; charset=utf-8"
        },
        "body": {
          "test": "NO",
          "validDateTime": "05-04-2018 00:00:00"
        }
      }
    },
    {
      "description": "A invalid GET request for Date Validation with empty string date parameter",
      "providerState": "There is data",
      "request": {
        "method": "get",
        "path": "/api/provider",
        "query": "validDateTime="
      },
      "response": {
        "status": 400,
        "headers": {
          "Content-Type": "application/json; charset=utf-8"
        },
        "body": {
          "message": "validDateTime is required"
        }
      }
    },
    {
      "description": "testing demo first",
      "providerState": "There is data",
      "request": {
        "method": "post",
        "path": "/api/",
        "headers": {
          "Content-Type": "application/json; charset=utf-8"
        },
        "body": {
          "operationName": "SrcsetImages",
          "query": "query SrcsetImages($id: Int!, $width960: Int!, $width128: Int!) {\n  site {\n    product(entityId: $id) {\n      images {\n        edges {\n          node {\n            url960wide: url(width: $width960)\n            url1280wide: url(width: $width128)\n          }\n        }\n      }\n    }\n  }\n}\n",
          "variables": {
            "id": 66,
            "width960": 960,
            "width128": 128
          }
        }
      },
      "response": {
        "status": 200,
        "headers": {
          "Content-Type": "application/json; charset=utf-8"
        },
        "body": {
          "data": {
            "site": {
              "product": {
                "images": {
                  "edges": [
                    {
                      "node": {
                        "url960wide": "BIG960w.jpg",
                        "url1280wide": "BIG128w.jpg"
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    }
  ],
  "metadata": {
    "pactSpecification": {
      "version": "2.0.0"
    }
  }
}